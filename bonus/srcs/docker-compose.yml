services:
  nginx:
    container_name: nginx
    build:
      context: ./services/nginx/
      args:
      - SSL_KEY=${SSL_KEY}
      - SSL_CERT=${SSL_CERT}
    ports:
      - 443:443
    restart: on-failure
    networks:
      - my_network
    volumes:
      - wp_data:/var/www/html/
    depends_on:
      wordpress:
        condition: service_healthy

  wordpress:
    container_name: wordpress
    build:
      context: ./services/wordpress/
    environment:
      DB_NAME: ${DB_NAME}
      ADMIN_NAME: ${ADMIN_NAME}
      ADMIN_PASS: ${ADMIN_PASS}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      DB_USER_NAME: ${DB_USER_NAME}
      DB_USER_PASS: ${DB_USER_PASS}
      ROOT_PASS: ${ROOT_PASS}
    expose:
      - 9000
    restart: on-failure
    networks:
      - my_network
    volumes:
      - wp_data:/var/www/html/
    depends_on:
      mariadb:
        condition: service_healthy
    healthcheck:
      test: service php8.0-fpm status
      interval: 2s
      timeout: 3s
      retries: 20

  mariadb:
    container_name: mariadb
    build:
      context: ./services/mariadb/
      args:
        - DB_NAME=${DB_NAME}
        - ADMIN_NAME=${ADMIN_NAME}
        - ADMIN_PASS=${ADMIN_PASS}
        - DB_USER_NAME=${DB_USER_NAME}
        - DB_USER_PASS=${DB_USER_PASS}
        - ROOT_PASS=${ROOT_PASS}
    expose:
      - 3306
    restart: on-failure
    networks:
      - my_network
    volumes:
      - wp_db:/var/lib/mysql
    healthcheck:
      test: service mariadb status
      interval: 2s
      timeout: 3s
      retries: 20

  ftp:
    container_name: ftp
    build:
      context: ./services/ftp/
    ports:
      - 21:21
    environment:
      FTP_PASS: ${FTP_PASS}
    restart: on-failure
    networks:
      - my_network
    volumes:
      - wp_data:/var/www/html
    depends_on:
      wordpress:
        condition: service_healthy



  redis:
    container_name: redis
    build:
      context: ./services/redis/
    expose:
      - 6379
    restart: on-failure
    networks:
      - my_network
    volumes:
      - wp_data:/var/www/html/
    depends_on:
      wordpress:
        condition: service_healthy


  # minecraft:
  #   container_name: minecraft
  #   build:
  #     context: ./services/minecraft/
  #     args:
  #       - NGROK_AUTH=${NGROK_AUTH}
  #   ports:
  #     - 25565:25565
  #   restart: on-failure
  #   volumes:
  #     - minecraft_data:/opt/minecraft

networks:
  my_network:
    name: "my_network"
    driver: bridge

volumes:
  wp_db:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: $VOL_DIR/wp_db
  wp_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: $VOL_DIR/wp_data
  minecraft_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: $VOL_DIR/minecraft_data
